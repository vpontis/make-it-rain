setwd('~/Dropbox/Classes/6.UAP/')
setwd('~/Dropbox/Classes/6.UAP/')
train_small <- read.csv("~/Dropbox (Personal)/Classes/6.UAP/data/train_small.csv", na.strings="nan")
# map TimeToEnd  to a vector of numbers
train_small$TimeToEnd <- as.vector(sapply(strsplit(as.character(train_small$TimeToEnd), " "), as.double))
train_small$DistanceToRadar <- as.vector(sapply(strsplit(as.character(train_small$DistanceToRadar), " "), as.double))
# note the number of measurements each hour
train_small$Measurements <- sapply(train_small$TimeToEnd, length)
train_small$MeasurementsRadar <- sapply(train_small$DistanceToRadar, length)
View(train_small)
setwd('~/Dropbox/Classes/6.UAP/')
train_small <- read.csv("~/Dropbox (Personal)/Classes/6.UAP/data/train_small.csv", na.strings="nan")
# map TimeToEnd  to a vector of numbers
train_small$TimeToEnd <- as.vector(sapply(strsplit(as.character(train_small$TimeToEnd), " "), as.double))
train_small$DistanceToRadar <- as.vector(sapply(strsplit(as.character(train_small$DistanceToRadar), " "), as.double))
# note the number of measurements each hour
train_small$Measurements <- sapply(train_small$TimeToEnd, length)
NaN
mean(c(Nan, 1))
mean(c(NaN, 1))
?mean
mean(c(NaN, 1), na.rm=true)
mean(c(NaN, 1), na.rm=True)
mean(c(NaN, 1), na.rm = TRUE)
install.packages('pracma')
?sigmoid
sigmoid
??sigmoid
pracma
use('pracma')
load('pracma')
library()
library('pracma')
sigmoid
sigmoid(0)
sigmoid(1)
sigmoid(e)
math.e
math
E
?math
sigmoid
sigmoid(0, 10)
sigmoid(0)
headers
values
attributes
attributes(train_small)
train_small$RR1 <- as.vector(sapply(strsplit(as.character(train_small$RR1), " "), as.double))
train_small$RR1[1]
train_small$RR1[2]
train_small$RR1[5]
train_small$RR1[10]
train_small$RR1[1000]
(1,2)
r(1,2)
c(1,2)
c(1,2)
c(train_small$RR1[1], train_small$TimeToEnd[1])
c(train_small$RR1[10], train_small$TimeToEnd[10])
max(train_small$TimeToEnd[10])
max(train_small$TimeToEnd[10])
train_small$TimeToEnd[10]
train_small$TimeToEnd[[10]
train_small$TimeToEnd[[10]]
max(train_small$TimeToEnd[[10]])
min(train_small$TimeToEnd[[10]])
sigmoid_function <- function(center, length) {}
sigmoid_function <- function(center, length) {
}
1:70
sigmoid(1-1:70)
1-1:70
1-(1:70)
sigmoid_function <- function(center, length) {
result <- sigmoid(center - 0:length + 1)
return(result)
}
sigmoid_function <- function(center, length) {
result <- sigmoid(-1*(center - 0:length + 1))
return(result)
}
1-(1:70)
sigmoid_function(10, 70)
sigmoid_function(0, 70)
sigmoid_function(1, 70)
sigmoid_function(100, 70)
sigmoid_function(10, 70)
sigmoid_function(50, 70)
